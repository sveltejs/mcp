{
  "generated_at": "2025-10-11T00:44:20.606Z",
  "model": "claude-sonnet-4-5-20250929",
  "total_sections": 173,
  "successful_summaries": 173,
  "summaries": {
    "cli/overview": "project setup, creating new svelte apps, scaffolding, cli tools, initializing projects",
    "cli/faq": "project setup, initializing new svelte projects, troubleshooting cli installation, package manager configuration",
    "cli/sv-create": "project setup, starting new sveltekit app, initializing project, creating from playground, choosing project template",
    "cli/sv-add": "project setup, adding features to existing projects, integrating tools, testing setup, styling setup, authentication, database setup, deployment adapters",
    "cli/sv-check": "code quality, ci/cd pipelines, error checking, typescript projects, pre-commit hooks, finding unused css, accessibility auditing, production builds",
    "cli/sv-migrate": "migration, upgrading svelte versions, upgrading sveltekit versions, modernizing codebase, svelte 3 to 4, svelte 4 to 5, sveltekit 1 to 2, adopting runes, refactoring deprecated apis",
    "cli/devtools-json": "development setup, chrome devtools integration, browser-based editing, local development workflow, debugging setup",
    "cli/drizzle": "database setup, sql queries, orm integration, data modeling, postgresql, mysql, sqlite, server-side data access, database migrations, type-safe queries",
    "cli/eslint": "code quality, linting, error detection, project setup, code standards, team collaboration, typescript projects",
    "cli/lucia": "authentication, login systems, user management, registration pages, session handling, auth setup",
    "cli/mdsvex": "blog, content sites, markdown rendering, documentation sites, technical writing, cms integration, article pages",
    "cli/paraglide": "internationalization, multi-language sites, i18n, translation, localization, language switching, global apps, multilingual content",
    "cli/playwright": "browser testing, e2e testing, integration testing, test automation, quality assurance, ci/cd pipelines, testing user flows",
    "cli/prettier": "code formatting, project setup, code style consistency, team collaboration, linting configuration",
    "cli/storybook": "component development, design systems, ui library, isolated component testing, documentation, visual testing, component showcase",
    "cli/sveltekit-adapter": "deployment, production builds, hosting setup, choosing deployment platform, configuring adapters, static site generation, node server, vercel, cloudflare, netlify",
    "cli/tailwind": "project setup, styling, css framework, rapid prototyping, utility-first css, design systems, responsive design, adding tailwind to svelte",
    "cli/vitest": "testing, unit tests, component testing, test setup, quality assurance, ci/cd pipelines, test-driven development",
    "kit/introduction": "learning sveltekit, project setup, understanding framework basics, choosing between svelte and sveltekit, getting started with full-stack apps",
    "kit/creating-a-project": "project setup, starting new sveltekit app, initial development environment, first-time sveltekit users, scaffolding projects",
    "kit/project-types": "deployment, project setup, choosing adapters, ssr vs csr, static sites, spas, serverless, mobile apps, desktop apps, pwa, browser extensions",
    "kit/project-structure": "project setup, understanding file structure, organizing code, starting new project, learning sveltekit basics",
    "kit/web-standards": "always, any sveltekit project, data fetching, forms, api routes, server-side rendering, deployment to various platforms",
    "kit/routing": "routing, navigation, multi-page apps, project setup, file structure, api endpoints, data loading, layouts, error pages, always",
    "kit/load": "data fetching, api calls, database queries, dynamic routes, page initialization, loading states, authentication checks, ssr data, form data, content rendering",
    "kit/form-actions": "forms, user input, data submission, authentication, login systems, user registration, progressive enhancement, validation errors",
    "kit/page-options": "prerendering static sites, ssr configuration, spa setup, client-side rendering control, url trailing slash handling, adapter deployment config, build optimization",
    "kit/state-management": "sveltekit, server-side rendering, ssr, state management, authentication, data persistence, load functions, context api, navigation, component lifecycle",
    "kit/remote-functions": "remote functions, type-safe client-server communication, data fetching, forms, mutations, database queries, user authentication, crud operations, api endpoints",
    "kit/building-your-app": "production builds, deployment preparation, build process optimization, adapter configuration, preview before deployment",
    "kit/adapters": "deployment, production builds, hosting setup, choosing deployment platform, configuring adapters",
    "kit/adapter-auto": "deployment, production builds, hosting setup, choosing deployment platform, ci/cd configuration",
    "kit/adapter-node": "deployment, production builds, node.js hosting, custom server setup, environment configuration, reverse proxy setup, docker deployment, systemd services",
    "kit/adapter-static": "static site generation, ssg, prerendering, deployment, github pages, spa mode, blogs, documentation sites, marketing sites",
    "kit/single-page-apps": "spa mode, single-page apps, client-only rendering, static hosting, mobile app wrappers, no server-side logic, adapter-static setup, fallback pages",
    "kit/adapter-cloudflare": "deployment, cloudflare workers, cloudflare pages, hosting setup, production builds, serverless deployment, edge computing",
    "kit/adapter-cloudflare-workers": "deploying to cloudflare workers, cloudflare workers sites deployment, legacy cloudflare adapter, wrangler configuration, cloudflare platform bindings",
    "kit/adapter-netlify": "deployment, netlify hosting, production builds, serverless functions, edge functions, static site hosting",
    "kit/adapter-vercel": "deployment, vercel hosting, production builds, serverless functions, edge functions, isr, image optimization, environment variables",
    "kit/writing-adapters": "custom deployment, building adapters, unsupported platforms, adapter development, custom hosting environments",
    "kit/advanced-routing": "advanced routing, dynamic routes, file viewers, nested paths, custom 404 pages, url validation, route parameters, multi-level navigation",
    "kit/hooks": "authentication, logging, error tracking, request interception, api proxying, custom routing, internationalization, database initialization, middleware logic, session management",
    "kit/errors": "error handling, custom error pages, 404 pages, api error responses, production error logging, error tracking, type-safe errors",
    "kit/link-options": "routing, navigation, multi-page apps, performance optimization, link preloading, forms with get method, search functionality, focus management, scroll behavior",
    "kit/service-workers": "offline support, pwa, caching strategies, performance optimization, precaching assets, network resilience, progressive web apps",
    "kit/server-only-modules": "api keys, environment variables, sensitive data protection, backend security, preventing data leaks, server-side code isolation",
    "kit/snapshots": "forms, user input, preserving form data, multi-step forms, navigation state, preventing data loss, textarea content, input fields, comment systems, surveys",
    "kit/shallow-routing": "modals, dialogs, image galleries, overlays, history-driven ui, mobile-friendly navigation, photo viewers, lightboxes, drawer menus",
    "kit/observability": "performance monitoring, debugging, observability, tracing requests, production diagnostics, analyzing slow requests, finding bottlenecks, monitoring server-side operations",
    "kit/packaging": "building component libraries, publishing npm packages, creating reusable svelte components, library development, package distribution",
    "kit/auth": "authentication, login systems, user management, session handling, jwt tokens, protected routes, user credentials, authorization checks",
    "kit/performance": "performance optimization, slow loading pages, production deployment, debugging performance issues, reducing bundle size, improving load times",
    "kit/icons": "icons, ui components, styling, css frameworks, tailwind, unocss, performance optimization, dependency management",
    "kit/images": "image optimization, responsive images, performance, hero images, product photos, galleries, cms integration, cdn setup, asset management",
    "kit/accessibility": "always, any sveltekit project, screen reader support, keyboard navigation, multi-page apps, client-side routing, internationalization, multilingual sites",
    "kit/seo": "seo optimization, search engine ranking, content sites, blogs, marketing sites, public-facing apps, sitemaps, amp pages, meta tags, performance optimization",
    "kit/faq": "troubleshooting package imports, library compatibility issues, client-side code execution, external api integration, middleware setup, database configuration, view transitions, yarn configuration",
    "kit/integrations": "project setup, css preprocessors, typescript configuration, adding integrations, tooling setup",
    "kit/debugging": "debugging, breakpoints, development workflow, troubleshooting issues, vscode setup, ide configuration, inspecting code execution",
    "kit/migrating-to-sveltekit-2": "migration, upgrading from sveltekit 1 to 2, breaking changes, version updates",
    "kit/migrating": "migrating from sapper, upgrading legacy projects, sapper to sveltekit conversion, project modernization",
    "kit/additional-resources": "troubleshooting, getting help, finding examples, learning sveltekit, project templates, common issues, community support",
    "kit/glossary": "rendering strategies, performance optimization, deployment configuration, seo requirements, static sites, spas, server-side rendering, prerendering, edge deployment, pwa development",
    "kit/@sveltejs-kit": "forms, form actions, form submission, form validation, error handling, redirects, api endpoints, server-side logic, data mutations, user input processing",
    "kit/@sveltejs-kit-hooks": "middleware, request processing, authentication chains, logging, multiple hooks, request/response transformation",
    "kit/@sveltejs-kit-node-polyfills": "node.js environments, custom servers, non-standard runtimes, ssr setup, web api compatibility, polyfill requirements",
    "kit/@sveltejs-kit-node": "node.js adapter, custom server setup, http integration, streaming files, node deployment, server-side rendering with node",
    "kit/@sveltejs-kit-vite": "project setup, vite configuration, initial sveltekit setup, build tooling",
    "kit/$app-environment": "always, conditional logic, client-side code, server-side code, build-time logic, prerendering, development vs production, environment detection",
    "kit/$app-forms": "forms, user input, data submission, progressive enhancement, custom form handling, form validation",
    "kit/$app-navigation": "routing, navigation, multi-page apps, programmatic navigation, data reloading, preloading, shallow routing, navigation lifecycle, scroll handling, view transitions",
    "kit/$app-paths": "static assets, images, fonts, public files, base path configuration, subdirectory deployment, cdn setup, asset urls, links, navigation",
    "kit/$app-server": "remote functions, server-side logic, data fetching, form handling, mutations, prerendering, reading static assets, batch queries, client-server communication",
    "kit/$app-state": "routing, navigation, multi-page apps, loading states, url parameters, form handling, error states, version updates, page metadata, shallow routing",
    "kit/$app-stores": "legacy projects, sveltekit pre-2.12, migration from stores to runes, maintaining older codebases, accessing page data, navigation state, app version updates",
    "kit/$app-types": "routing, navigation, type safety, route parameters, dynamic routes, link generation, pathname validation, multi-page apps",
    "kit/$env-dynamic-private": "api keys, secrets management, server-side config, environment variables, backend logic, deployment-specific settings, private data handling",
    "kit/$env-dynamic-public": "environment variables, client-side config, runtime configuration, public api keys, deployment-specific settings, multi-environment apps",
    "kit/$env-static-private": "server-side api keys, backend secrets, database credentials, private configuration, build-time optimization, server endpoints, authentication tokens",
    "kit/$env-static-public": "environment variables, public config, client-side data, api endpoints, build-time configuration, public constants",
    "kit/$lib": "project setup, component organization, importing shared components, reusable ui elements, code structure",
    "kit/$service-worker": "offline support, pwa, service workers, caching strategies, progressive web apps, offline-first apps",
    "kit/configuration": "project setup, configuration, adapters, deployment, build settings, environment variables, routing customization, prerendering, csp security, csrf protection, path configuration, typescript setup",
    "kit/cli": "project setup, typescript configuration, generated types, ./$types imports, initial project configuration",
    "kit/types": "typescript, type safety, route parameters, api endpoints, load functions, form actions, generated types, jsconfig setup",
    "svelte/overview": "always, any svelte project, getting started, learning svelte, introduction, project setup, understanding framework basics",
    "svelte/getting-started": "project setup, starting new svelte project, initial installation, choosing between sveltekit and vite, editor configuration",
    "svelte/svelte-files": "always, any svelte project, component creation, project setup, learning svelte basics",
    "svelte/svelte-js-files": "shared reactive state, reusable reactive logic, state management across components, global stores, custom reactive utilities",
    "svelte/what-are-runes": "always, any svelte 5 project, understanding core syntax, learning svelte 5, migration from svelte 4",
    "svelte/$state": "always, any svelte project, core reactivity, state management, counters, forms, todo apps, interactive ui, data updates, class-based components",
    "svelte/$derived": "always, any svelte project, computed values, reactive calculations, derived data, transforming state, dependent values",
    "svelte/$effect": "canvas drawing, third-party library integration, dom manipulation, side effects, intervals, timers, network requests, analytics tracking",
    "svelte/$props": "always, any svelte project, passing data to components, component communication, reusable components, component props",
    "svelte/$bindable": "forms, user input, two-way data binding, custom input components, parent-child communication, reusable form fields",
    "svelte/$inspect": "debugging, development, tracking state changes, reactive state monitoring, troubleshooting reactivity issues",
    "svelte/$host": "custom elements, web components, dispatching custom events, component library, framework-agnostic components",
    "svelte/basic-markup": "always, any svelte project, basic markup, html templating, component structure, attributes, events, props, text rendering",
    "svelte/if": "always, conditional rendering, showing/hiding content, dynamic ui, user permissions, loading states, error handling, form validation",
    "svelte/each": "always, lists, arrays, iteration, product listings, todos, tables, grids, dynamic content, shopping carts, user lists, comments, feeds",
    "svelte/key": "animations, transitions, component reinitialization, forcing component remount, value-based ui updates, resetting component state",
    "svelte/await": "async data fetching, api calls, loading states, promises, error handling, lazy loading components, dynamic imports",
    "svelte/snippet": "reusable markup, component composition, passing content to components, table rows, list items, conditional rendering, reducing duplication",
    "svelte/@render": "reusable ui patterns, component composition, conditional rendering, fallback content, layout components, slot alternatives, template reuse",
    "svelte/@html": "rendering html strings, cms content, rich text editors, markdown to html, blog posts, wysiwyg output, sanitized html injection, dynamic html content",
    "svelte/@attach": "tooltips, popovers, dom manipulation, third-party libraries, canvas drawing, element lifecycle, interactive ui, custom directives, wrapper components",
    "svelte/@const": "computed values in loops, derived calculations in blocks, local variables in each iterations, complex list rendering",
    "svelte/@debug": "debugging, development, troubleshooting, tracking state changes, monitoring variables, reactive data inspection",
    "svelte/bind": "forms, user input, two-way data binding, interactive ui, media players, file uploads, checkboxes, radio buttons, select dropdowns, contenteditable, dimension tracking",
    "svelte/use": "custom directives, dom manipulation, third-party library integration, tooltips, click outside, gestures, focus management, element lifecycle hooks",
    "svelte/transition": "animations, interactive ui, modals, dropdowns, notifications, conditional content, show/hide elements, smooth state changes",
    "svelte/in-and-out": "animation, transitions, interactive ui, conditional rendering, independent enter/exit effects, modals, tooltips, notifications",
    "svelte/animate": "sortable lists, drag and drop, reorderable items, todo lists, kanban boards, playlist editors, priority queues, animated list reordering",
    "svelte/style": "dynamic styling, conditional styles, theming, dark mode, responsive design, interactive ui, component styling",
    "svelte/class": "always, conditional styling, dynamic classes, tailwind css, component styling, reusable components, responsive design",
    "svelte/await-expressions": "async data fetching, loading states, server-side rendering, awaiting promises in components, async validation, concurrent data loading",
    "svelte/scoped-styles": "always, styling components, scoped css, component-specific styles, preventing style conflicts, animations, keyframes",
    "svelte/global-styles": "global styles, third-party libraries, css resets, animations, styling body/html, overriding component styles, shared keyframes, base styles",
    "svelte/custom-properties": "theming, custom styling, reusable components, design systems, dynamic colors, component libraries, ui customization",
    "svelte/nested-style-elements": "component styling, scoped styles, dynamic styles, conditional styling, nested style tags, custom styling logic",
    "svelte/svelte-boundary": "error handling, async data loading, loading states, error recovery, flaky components, error reporting, resilient ui",
    "svelte/svelte-window": "keyboard shortcuts, scroll tracking, window resize handling, responsive layouts, online/offline detection, viewport dimensions, global event listeners",
    "svelte/svelte-document": "document events, visibility tracking, fullscreen detection, pointer lock, focus management, document-level interactions",
    "svelte/svelte-body": "mouse tracking, hover effects, cursor interactions, global body events, drag and drop, custom cursors, interactive backgrounds, body-level actions",
    "svelte/svelte-head": "seo optimization, page titles, meta tags, social media sharing, dynamic head content, multi-page apps, blog posts, product pages",
    "svelte/svelte-element": "dynamic content, cms integration, user-generated content, configurable ui, runtime element selection, flexible components",
    "svelte/svelte-options": "migration, custom elements, web components, legacy mode compatibility, runes mode setup, svg components, mathml components, css injection control",
    "svelte/stores": "shared state, cross-component data, reactive values, async data streams, manual control over updates, rxjs integration, extracting logic",
    "svelte/context": "shared state, avoiding prop drilling, component communication, theme providers, user context, authentication state, configuration sharing, deeply nested components",
    "svelte/lifecycle-hooks": "component initialization, cleanup tasks, timers, subscriptions, dom measurements, chat windows, autoscroll features, migration from svelte 4",
    "svelte/imperative-component-api": "project setup, client-side rendering, server-side rendering, ssr, hydration, testing, programmatic component creation, tooltips, dynamic mounting",
    "svelte/testing": "testing, quality assurance, unit tests, integration tests, component tests, e2e tests, vitest setup, playwright setup, test automation",
    "svelte/typescript": "typescript setup, type safety, component props typing, generic components, wrapper components, dom type augmentation, project configuration",
    "svelte/custom-elements": "web components, custom elements, component library, design system, framework-agnostic components, embedding svelte in non-svelte apps, shadow dom",
    "svelte/v4-migration-guide": "upgrading svelte 3 to 4, version migration, updating dependencies, breaking changes, legacy project maintenance",
    "svelte/v5-migration-guide": "migrating from svelte 4 to 5, upgrading projects, learning svelte 5 syntax changes, runes migration, event handler updates",
    "svelte/faq": "getting started, learning svelte, project setup, beginner tutorials, vs code setup, code formatting, testing, routing, component documentation, mobile apps, styling issues",
    "svelte/svelte": "migration from svelte 4 to 5, upgrading legacy code, component lifecycle hooks, context api, mounting components, event dispatchers, typescript component types",
    "svelte/svelte-action": "typescript types, actions, use directive, dom manipulation, element lifecycle, custom behaviors, third-party library integration",
    "svelte/svelte-animate": "animated lists, sortable items, drag and drop, reordering elements, todo lists, kanban boards, playlist management, smooth position transitions",
    "svelte/svelte-attachments": "library development, component libraries, programmatic element manipulation, migrating from actions to attachments, spreading props onto elements",
    "svelte/svelte-compiler": "build tools, custom compilers, ast manipulation, preprocessors, code transformation, migration scripts, syntax analysis, bundler plugins, dev tools",
    "svelte/svelte-easing": "animations, transitions, custom easing, smooth motion, interactive ui, modals, dropdowns, carousels, page transitions, scroll effects",
    "svelte/svelte-events": "window events, document events, global event listeners, event delegation, programmatic event handling, cleanup functions, media queries",
    "svelte/svelte-legacy": "migration from svelte 4 to svelte 5, upgrading legacy code, event modifiers, class components, imperative component instantiation",
    "svelte/svelte-motion": "animation, smooth transitions, interactive ui, sliders, counters, physics-based motion, drag gestures, accessibility, reduced motion",
    "svelte/svelte-reactivity-window": "responsive design, viewport tracking, scroll effects, window resize handling, online/offline detection, zoom level tracking",
    "svelte/svelte-reactivity": "reactive data structures, state management with maps/sets, game boards, selection tracking, url manipulation, query params, real-time clocks, media queries, responsive design",
    "svelte/svelte-server": "server-side rendering, ssr, static site generation, seo optimization, initial page load, pre-rendering, node.js server, custom server setup",
    "svelte/svelte-store": "state management, shared data, reactive stores, cross-component communication, global state, computed values, data synchronization, legacy svelte projects",
    "svelte/svelte-transition": "animations, transitions, interactive ui, modals, dropdowns, tooltips, notifications, svg animations, list animations, page transitions",
    "svelte/compiler-errors": "animation, transitions, keyed each blocks, list animations",
    "svelte/compiler-warnings": "accessibility, a11y compliance, wcag standards, screen readers, keyboard navigation, aria attributes, semantic html, interactive elements",
    "svelte/runtime-errors": "debugging errors, error handling, troubleshooting runtime issues, migration to svelte 5, component binding, effects and reactivity",
    "svelte/runtime-warnings": "debugging state proxies, console logging reactive values, inspecting state changes, development troubleshooting",
    "svelte/legacy-overview": "migrating from svelte 3/4 to svelte 5, maintaining legacy components, understanding deprecated features, gradual upgrade process",
    "svelte/legacy-let": "migration, legacy svelte projects, upgrading from svelte 4, understanding old reactivity, maintaining existing code, learning runes differences",
    "svelte/legacy-reactive-assignments": "legacy mode, migration from svelte 4, reactive statements, computed values, derived state, side effects",
    "svelte/legacy-export-let": "legacy mode, migration from svelte 4, maintaining older projects, component props without runes, exporting component methods, renaming reserved word props",
    "svelte/legacy-$$props-and-$$restProps": "legacy mode migration, component wrappers, prop forwarding, button components, reusable ui components, spreading props to child elements",
    "svelte/legacy-on": "legacy mode, event handling, button clicks, forms, user interactions, component communication, event forwarding, event modifiers",
    "svelte/legacy-slots": "legacy mode, migrating from svelte 4, component composition, reusable components, passing content to components, modals, layouts, wrappers",
    "svelte/legacy-$$slots": "legacy mode, conditional slot rendering, optional content sections, checking if slots provided, migrating from legacy to runes",
    "svelte/legacy-svelte-fragment": "named slots, component composition, layout systems, avoiding wrapper divs, legacy svelte projects, slot content organization",
    "svelte/legacy-svelte-component": "dynamic components, component switching, conditional rendering, legacy mode migration, tabbed interfaces, multi-step forms",
    "svelte/legacy-svelte-self": "recursive components, tree structures, nested menus, file explorers, comment threads, hierarchical data",
    "svelte/legacy-component-api": "migration from svelte 3/4 to 5, legacy component api, maintaining old projects, understanding deprecated patterns",
    "mcp/overview": "ai development, llm integration, code generation tools, agent setup, improving ai code quality, svelte tooling for ai assistants",
    "mcp/local-setup": "ai-assisted development, mcp integration, claude setup, cursor setup, vscode setup, ai coding tools, development environment configuration",
    "mcp/remote-setup": "ai-assisted development, using claude/cursor/vscode with mcp, integrating svelte documentation into ide, ai coding tools setup",
    "mcp/tools": "ai development, llm integration, code generation tools, chatbot features, ai-assisted coding, automated code analysis, testing generated code",
    "mcp/resources": "mcp server setup, ai-assisted development, llm integration, documentation tooling, developer workflow automation",
    "mcp/prompts": "mcp server setup, ai assistant integration, llm tool configuration, svelte development workflow automation"
  },
  "content_hashes": {
    "cli/overview": "24ce88570619713523dd675b54cf5ed810fc787f91c44295ed66cba88b586ab2",
    "cli/faq": "130b9862c1e56e7c289f7f350cf63c2bbd06b5895cecf2408d7018b30308596b",
    "cli/sv-create": "8ebe2ab8a05f73d57b6c20ca062694fafa17afebcf6228eadb28c9e2269532dc",
    "cli/sv-add": "febb2db174bb74aafadba071d03e60be32affd39256488dd9d7bf039bc99e55c",
    "cli/sv-check": "998117f78c8d13cda5aa9b8584f47306aedab8b4c5748b633f8282c994e5314d",
    "cli/sv-migrate": "8f0638858fb871b313d3aa7d15b3a82167e59fc2243f7991ca9d784c88abe728",
    "cli/devtools-json": "f68617102d58bc74cfa894254a3ec53950a69f62888477314dee5f2e8fa7d08c",
    "cli/drizzle": "f402220ec1272ddd283bd16b0116a4e584f9d7ff32cf31cd61e1b87467863bae",
    "cli/eslint": "881091b7857f92188ab98fba009cc7229414966a5f784550522a32c08dff8bc7",
    "cli/lucia": "9bdc0d65fea53e3f6709f02bbc6e7b5e14b815874f267d71fec6401fa2bb0de1",
    "cli/mdsvex": "4c9a3d8a661325d45b04ae511bb07fb8fb3853ef6e9ddba905e11ff10096aa44",
    "cli/paraglide": "3052be60f590bfdb3ebdd3232c5d4cea47b45004238eed25c14062451b8084ab",
    "cli/playwright": "255bc17601b4545fcf76dd9639b8d0a07bc9c1967e0bc8b0f8a4c67747fa27ad",
    "cli/prettier": "b6eaf065c2dd9a529b58aa848b81ca0aa48a61286093697007f101b18a64a3f4",
    "cli/storybook": "266ccae29ef911b2b3dc3d5c85e087d35bd20cd040ce0ce3b759cda057a6dbec",
    "cli/sveltekit-adapter": "8fa56b7fc75c856ec28ff0e6b05c3c290869c3f6701f469f4cf6d748b45c43fe",
    "cli/tailwind": "06f78477ba2df15fe0c5ee5698cb47e9bdbb558ad4e9c73a5c3a89be4935b22c",
    "cli/vitest": "49e0d37ae9a4a8af6d098ad0189d479ec7c07dc31a2fa3e7c8237e457c0e4f8b",
    "kit/introduction": "28c0756c4179d9be8a3feb146ed139feb260e78f0226078d5c4829fd4a303e67",
    "kit/creating-a-project": "65828935583402267d681f4609d04a2485f71c5d0a35fd4362f54f781bfabfc9",
    "kit/project-types": "4730fd90c7bb1459d1f8987fbeecdea5df42b538dc03b1b9b35ae68df4d959f0",
    "kit/project-structure": "fbc465d2744567cee3507e7b39c743cb9cac6c489c3349d6cc95ce1ced8b1435",
    "kit/web-standards": "a54c4c2d97f8c50e4c1170dd6059a125a9f7c79f7c0484a348a24e015cccf4ea",
    "kit/routing": "1fac22ea79cc9370e259adc2031f2259b53a655b9f1539506bb08f463a95aa2a",
    "kit/load": "986bf651baa6157301c3d5de873ddb3533a5df9397d995c7a079e8c7ddcbd496",
    "kit/form-actions": "781ffd55a5d4d05b5766ef6367d4cf353425f611d5f0876959796212a2ff14c8",
    "kit/page-options": "c1275054c96c6044352bc457415d3c258c9a6af48db862003e1b9ee6c7c908c5",
    "kit/state-management": "502db80d327820e8785301688f2351459179ad995e50dce8f4755f5d5d0ac6bd",
    "kit/remote-functions": "7a12920dc5b3f9760c3a1a0e6be3347c24ed700da95ac407ad3e9fb1c670f0cc",
    "kit/building-your-app": "20c5e2c2106bed1b052e037729b4410d12bf96e3d3bbb7fcbba346a308db00e8",
    "kit/adapters": "dd1909dd7297d3cef2a9489b7ce49036f8e559401d2504ee916d7f464fb21822",
    "kit/adapter-auto": "d09059d0117e2fa4ceb66650f47c3649420e1597452b0650905068df9a5ce5b1",
    "kit/adapter-node": "7f6046c4d9907006e0be9ecd7f291848953051ef85271483fb2baaa13c7d87dd",
    "kit/adapter-static": "c2e7be2cc09d0828a62ea843483efa0b74518b704699a3527b2c6098db8e17b5",
    "kit/single-page-apps": "47fe9184df8e8eaaa22970aee1200fba02b6c1b478a6ffc26d1935635c8e0daa",
    "kit/adapter-cloudflare": "2a64107ce88e5ccb39615688412c5a8186980655673a5133a2dc50659ed5aab3",
    "kit/adapter-cloudflare-workers": "424a8fbee22b74c59c30125f8e2843e292b8a64fd0e16df43ea5ca9c2750298c",
    "kit/adapter-netlify": "b43920d5588573a3ae22b71f4e60a19114725fa252239cc35e332965b5716bc3",
    "kit/adapter-vercel": "05cff8e507f64d37be03750fa719a4195ab4984ce8c9f381ea2209d8410497e9",
    "kit/writing-adapters": "e4c68eec588c6b4e5e7a53d96a4b85e26f3112458c430e90e7cdb2b20cf520d1",
    "kit/advanced-routing": "a91ec9444fd4dac8ff8cf13b2461e4dbbe2567e665e190bda29785537a0656e3",
    "kit/hooks": "e30ecbd21e7f29c16b42345b06b3e15be22796b158bde3256818121eaca18d66",
    "kit/errors": "fd8a2a2627a43141247d881fddc6e35c9cadec80014e97356249cafc1c3a6d9d",
    "kit/link-options": "37f95fa6c1b1af1a91ab62f4aa6b299e5462b6e5c1b58e0b02d8c1115e86cded",
    "kit/service-workers": "b662bafc6116274744cdea6d4ab9ef1eff2f0155dd7b3d9cef7d02a2d618701e",
    "kit/server-only-modules": "e5f80d7c5f350e7ca6e631bb893e83280ba3745a099a6942789def4919d41fd5",
    "kit/snapshots": "fdb47bf4216c38e9a8de0ddf2bb0608d35b762f30c7ee8602de53a6d0d9e4a0a",
    "kit/shallow-routing": "30d4b3b2ef8fbb921b5c176c1d147413f366dceb8fcbafc14ca63481c14cd3d4",
    "kit/observability": "47d603f5c605f5b4afcdfb22dc9b2f5fd145ae5c6d2a1f7ff42ab97a6bba8768",
    "kit/packaging": "249a22b2cb633f2bb1e63d1ff0d85c85b9cba64d4421853cb81e9aed5a96153e",
    "kit/auth": "728a3b639a4c2cca049cbf55aea37373856f3fa6deb435f42362fa91073ad5f4",
    "kit/performance": "ab69e26e699e8e7bfa669dc8f497f46f3dd9cec8f6c41226795e6932b6f145f7",
    "kit/icons": "d677885a338c1e579a8ea6dfe39ae10a1d20818089f7ef8652f90285a9121da8",
    "kit/images": "e6957eb17b5a7628e402f75388d221a51e1f26e6a1ad0593d7fd66d6eac88fea",
    "kit/accessibility": "9886bfa33757fc6070b2fb5257d392ef4222d5f904f12769d2c1393681f60d95",
    "kit/seo": "bc9620fd9e0647862de12ac97acdcf0c8b612235dd1c2181b0167cd5d8f1895b",
    "kit/faq": "57a5a8cab8696e3856d8ccc1f352d7ddebaf62a54c41f73de449e78cdd8d4a53",
    "kit/integrations": "995541eea85cab10811d69a6f2fdb0cb17d8ca4dfa0a955e3e6b99c78b53cfe8",
    "kit/debugging": "2dfd5e91bcb6371dd6596d2a6aafbd75fa4f289c859a06378f83db47ede02573",
    "kit/migrating-to-sveltekit-2": "1e14881387117aba2fd8652f0e61179cbe48d6d0b56dd79764b9a11fbf593ec6",
    "kit/migrating": "02f0dd45b5813c1f34d447c3a410e3a6a563ea2ec54fb06481be7ec690b97f81",
    "kit/additional-resources": "c6ff893413728f3165d5d6fa12c6ce81b36cfb867701f4ed8f5a46e50a28c4c2",
    "kit/glossary": "243f61f794e383efa48c4226e0a0e1d64f7e43e2049351cb02b007c95f6034ad",
    "kit/@sveltejs-kit": "4c3efcfc5179bbf05d87c22fefdf1444e96961d389cc0e61291ac94b7d93c8ab",
    "kit/@sveltejs-kit-hooks": "0fe8e4e985961ea67a721ed432c8c559c17ff09c1bda37b4b54239475c1ed47e",
    "kit/@sveltejs-kit-node-polyfills": "9f6bf38e1d0aa53cc055c8de2505ee5a80113b2db4d4db4a8cc9f9c68cf0b58c",
    "kit/@sveltejs-kit-node": "5bc0958d92037a982c4ffa47f11cd5e5ec6b91f503009fd644ac705c68247b79",
    "kit/@sveltejs-kit-vite": "7b8684d54b4cd2420d329536695d29c5d77891ed3f5062ff529f01524b0d8b33",
    "kit/$app-environment": "4bb0aee3c952ded3112422be5bc69c34b960cc73819d4b4d3b55ca3558aa2d45",
    "kit/$app-forms": "61a344004d71b921bb3c7d39a2afd9af4de5226a9e960b314838041b0792ea7f",
    "kit/$app-navigation": "92e632af18b1b9717fa6416f3eb410155f370c7ac7232077cbbbbec57fb9360a",
    "kit/$app-paths": "2c92cb88bf3b4a2dfbb29506edf4edcd4fb38b16a58c7d59efbca8cb3b53dcce",
    "kit/$app-server": "50c53e4f8851a489c0bdad479c58a82203188c5735d8ff36794172cf44f2695a",
    "kit/$app-state": "1d33d98725276564f912f1566a723235d26ddc24dc11381a2a05e3202db69e91",
    "kit/$app-stores": "f05e079b15bee2c561005f7f3b500f735a89c087da5778ad9390f2a1854fe3ec",
    "kit/$app-types": "9c5b3e9e428f9bd437b288e45679452960f46ebeace6f2a0f3da763b6a1ab9cd",
    "kit/$env-dynamic-private": "019a9b64f30a4407631d56554f2124061ad16b424888752186bdc961edf59eae",
    "kit/$env-dynamic-public": "39f6ff446965be224e528d14c9bfbb71f5fd9809f71db575bca6333d6427e941",
    "kit/$env-static-private": "526b80041929480f89ca948c02878aa8df669ae5380416bc30dc2d181869a6b3",
    "kit/$env-static-public": "5054a554cdd0a781ac5b5649aba92040556f87ad77cd1cc53fa939f544ac9515",
    "kit/$lib": "98d7b3ec9b4fba7e8d40b0c9a0845228d874bc037610abc12b346787557709ad",
    "kit/$service-worker": "d8a7b705cc0fde5e80ac381d5dc325ae689bd5a28c255eee4802396b2c0276db",
    "kit/configuration": "263d0373bf4da8181fb77b01a8ddc367cac7e101552bb6f252a48bcbee8139b6",
    "kit/cli": "690b0bd6cddbf1b1d2cb52a2956a757a515ca4e4b41ae6c85b37d94b8d1ade84",
    "kit/types": "1519bf5d3bdc6324a7da937d64624f6b2caed779c3e4091ac4439769beaa3453",
    "mcp/overview": "2f120bae00baa384aefc093eea0e3298e2e8fbda1ffa1c55c8ae956b83f28976",
    "mcp/local-setup": "615547482fc28ae62e5287f79124618b275f62017bfff511466f2326271b5bb9",
    "mcp/remote-setup": "af2dd1872f26a220838def57ae5d6f4424affb9d3f1d53ca570c021bb93d658d",
    "mcp/tools": "ccf68183cc4b6801a6aeeb575bfbdbdebd1af305624fe6cf64de3dbbeb9e025f",
    "mcp/resources": "381b5a3256eda7e8e09f8e8760dba1d0c542a49f4961c203f3f9ad10c1f5d638",
    "mcp/prompts": "84327e4e2d5b97a1fe3c8a693ab0f20a94dc068abb8d80bdde64dc09e7431b32",
    "svelte/overview": "7700ca74f439e7c3d397f6ceeed70aed59cf177894a30b475ed601778e9e8042",
    "svelte/getting-started": "80bbf8f2ea3580febd3e20296fdf63f29997e26e727774c2fc6080456bee4f52",
    "svelte/svelte-files": "8971b9003e5ce6898894a01615b5816c7a95191b5e327af53ce31b49844d6f0a",
    "svelte/svelte-js-files": "b6a481a0ba8e3498533a27d6ff34c4caf46b319716729e80b4e0abe98e90ae0d",
    "svelte/what-are-runes": "d52254d2631c5014d33de163a8ac8f3a011f3921397633bb2a9aeb90510b3479",
    "svelte/$state": "7d8c804721e60d4902109ebebea5cf3920f61af7c7613b1530406b27a1bdc105",
    "svelte/$derived": "b85bac4b7541f9eec5050c4afe11efa120c8d83de07073357769de328a2b9d70",
    "svelte/$effect": "fc928d4d5daafec1b06b7b143492524cf0ec5059b2ecf6cc88b56539e3d08375",
    "svelte/$props": "8b0e924f115db23113867c70863f8b24ec843f285fede30d54ede21fb7c3b83f",
    "svelte/$bindable": "60375b28577bc285815809c5bb85dec0a5e123bf3eda0da374d4c0cb28d9a377",
    "svelte/$inspect": "014b8f124d82cca846a14096588de250c09469b52f4bc0380fad45ec572ea0e3",
    "svelte/$host": "37a9fb749359688e1d68e03bef6833a67beb7ab695a5faeb73ed1d6ad1867c5f",
    "svelte/basic-markup": "7aebf6ad9be00b337d4018ddf768c11e1e8e13e9a8952c7ddc743d6cc1cca428",
    "svelte/if": "e4da4ed94902fa904fa168b50bb68d838f94a2c2be4faa5fef00b3dbbcc61645",
    "svelte/each": "e8d75f3a210da756db04881c81499027a6be5f875a0747fd4c01c4cc1f37a01b",
    "svelte/key": "5df663b8f1ada229fd771e5dc64bf5ad96ca21e27f6bd8c5b499d7b5fed5da35",
    "svelte/await": "ba40da73575717b3005d8c3f4fadf1dc47d4369229b1f1b98a9962dc5f05df3f",
    "svelte/snippet": "96f1853f3ca164532427e0c881b647b252ffb94cd3559505d8cf41ddd5279973",
    "svelte/@render": "fefc529a277b207668ec7171bdd044117b96792ed19903e0f6a0c35d1a184780",
    "svelte/@html": "37ffb87f829e7b36b521ee5e99f5956d76baf449e32661c5f7156f805e1fc82f",
    "svelte/@attach": "9bef203823fe4795129e280d37830b068bb9a6e805ccbadcf8509a3c0ee6151a",
    "svelte/@const": "e79a941a3e248400ed19fc410bdcca1e1dfd50b5e9f21b2d8224ef176e3e75cc",
    "svelte/@debug": "f57a6ce04733ab2e2af63b2d59344414e7b5130bdec00274e3542dcb468c8a21",
    "svelte/bind": "025daf253af040a560d79a8e5efee56f2d2922c55ab80fead24623d86c36d1d3",
    "svelte/use": "adb10f7ef6a316db21b32a2bc2cea079abe37c48bb33cdebf9db91592115bf23",
    "svelte/transition": "e916f804688a8d4dc7d6f34b2d5862595aa5a4a10daede17861d370eec873050",
    "svelte/in-and-out": "d1dc82a686f09fc6dec814a8ce824e40757c4b857b147a69e6c84bf93b0bcc17",
    "svelte/animate": "0320580f745ba93cb536ecbef5e10c227caad60fefae5dadc9dd52166a9453d7",
    "svelte/style": "a7e861bea29058120c83982fdc8b421dea565032f2940e18fa068df6a73eb061",
    "svelte/class": "15318e5a8d676aa840f71229a3f3e432883a7bbd00c4ef2b28e4fd4db755584d",
    "svelte/await-expressions": "01dc0a2118fd8a2cd649c737e097635a013576f85b473a752756ccaf92aa27e8",
    "svelte/scoped-styles": "c4ade79680ca0bda7e157be5fcafdb063002bacc79a5f9c1e8530ec4b479df7f",
    "svelte/global-styles": "52b1090dfdbff596c3f19264277df4b0d2b3a063e3ee3f42610b23c629ccac02",
    "svelte/custom-properties": "b0d4f8432380284735838ea0ab48812dc37665dec364908d3dc2c82fcb5179d9",
    "svelte/nested-style-elements": "86f7e79c3532f5a2e88f6cbfd3c2d4496f3c42858b799e6f47dd32409055ec29",
    "svelte/svelte-boundary": "a1ffd2ced1122092b06c7a5c3e2b66d127daa632a9888f8987de1438d24a2af4",
    "svelte/svelte-window": "95f83adf2a83e810917df66ec3ae64a083e20f79b9bae25a63693edad6186930",
    "svelte/svelte-document": "ea8eafada6dd22a1ca36a6d2b7c2ebd996620dd809bd29f1cf2e23912c9f2fb4",
    "svelte/svelte-body": "6d42bb102657242d2745658e8394df8e948384c93896bb1a38eba628129580e0",
    "svelte/svelte-head": "7d7ed49de4b8eaed5a7c2a3741c9c97d7f07f1c61d609cf95ea4642d7d9519fc",
    "svelte/svelte-element": "dbc2894d1a4df3bbc010e14fe8acaf47cab1e47595083549bcbe03ef6d70c0f8",
    "svelte/svelte-options": "361ae053b401b5748092545e79387c1fd204a0c05e0c97af476dd5c2b6459a05",
    "svelte/stores": "6af05349fa2e56cf97baf52bfdad4baa56205a07676bbbbf83ba9cc11b4f74c9",
    "svelte/context": "5aced025a25892c041d22e2942d5c793cab49425dbb79aa24c6e8bda6f831e52",
    "svelte/lifecycle-hooks": "4cb4967ff252980753a385d7400aeecd6e7e7e5d49853b07e6ce9ac5c21f226b",
    "svelte/imperative-component-api": "f65ba0880e127ea497167efeae5f6250233b35764549b81ba338f5e172fa4a84",
    "svelte/testing": "b186d594536788db689e45f5d006effa5bb0852539751a9f469c33f871ffbb07",
    "svelte/typescript": "0a7109270bbf8fb388e51e38b868f46c532d54ba3a7ae3304b0b369ec9f03c30",
    "svelte/custom-elements": "a74ef3bc373c0cf5d7d439accf11d398b3180f3e44fe576b1e68dd2813b6484d",
    "svelte/v4-migration-guide": "d78c974770bab180bfa50f8465ddd08d29dc3355d7d8da4aa2f892f68a8dcbae",
    "svelte/v5-migration-guide": "6e92e90f8b5086a7b1eda8d498e995650d4f93ef05ec35c89e24909c21f623bb",
    "svelte/faq": "e935b0651782fde2cb138dac2586fbb3627fddc08cdd7a8b00d1d09a5b63ff8d",
    "svelte/svelte": "bd2a9bcc3babc4dd148ae71ddb437d9c6e359c516f0823e14cd02fa99be3b37a",
    "svelte/svelte-action": "dd41790ddfa6ad8763c566bf81abcefd47bf1d82465e77224034507d65ef7dd2",
    "svelte/svelte-animate": "4b96afa6848acf81497770d69b655df3c7472b546f3024dcc25521ec14e585ed",
    "svelte/svelte-attachments": "4da23f36026be101db0440d9357e84d765b58cca00678548f52139a133913e9a",
    "svelte/svelte-compiler": "6815a77b9d14d476a4d4bc6ad589e5436ca3f8c897952eb858ee359ebba59f49",
    "svelte/svelte-easing": "452e4c4f8485a8047c3320c58fb4df07acaa8c7bd6171828f0b55673a05f2b22",
    "svelte/svelte-events": "06c912902e80d19cb1ca7e2eac03ca7138d0f9a39547f5ee51115196d483e948",
    "svelte/svelte-legacy": "b285c8859ed7403616829e2dcbf1a81982942182f8039a1acbba1a0082b54804",
    "svelte/svelte-motion": "c64243c31d2187b9fa41c16697fe3a5f204603382be53b6a6d8aef27ab4142e6",
    "svelte/svelte-reactivity-window": "48a9e5dba5564bddaac94a0d7ba4c8d5f8e2480cdebb19ba71288936bc76bdf1",
    "svelte/svelte-reactivity": "4ff4d515986a45e575bfa8d64e09e5f6b61a9f35e79035f7507cd502b9431d4f",
    "svelte/svelte-server": "bb027c8e6c0aa48a77349a49671f0bd60fec07b7c0150f1498e4a18e5f90288b",
    "svelte/svelte-store": "6f99d25bd75333042c6aa1377e33d5cc51aabf48b660eda5756f08d7d3b7a9b2",
    "svelte/svelte-transition": "e57769d1e309aa9f2fa4d591ac2fb7d73aedf232a437b975e7845352a3ad9909",
    "svelte/compiler-errors": "88172d54e4e4a1b094b8ec526fa84e0a9ee3a0cbfcbe90de6a09c580c48c3a0f",
    "svelte/compiler-warnings": "885adaa867ffd525b695b32b87789cf2d9bde741d45c13dd153dd5519233fd4b",
    "svelte/runtime-errors": "59035d3cf75f6af6fdd94fcf22c42cb66e892adf4d55a81801072c53f3dabcac",
    "svelte/runtime-warnings": "93b6ee308fd13add66bc7621659c22580eef4d6614bf78f0a130879ae5d8ec64",
    "svelte/legacy-overview": "f999cc193b4ecf36cbfb99b52107a55aa7b841b6e01ea5e0229799abd90933dc",
    "svelte/legacy-let": "3660721b3cd7cdcb60b77450bd87b6ded93eb7d47aee9950db994d3450d07739",
    "svelte/legacy-reactive-assignments": "ca81836b396d9f6d4df34707ea79ed177bdd2d93dd3b43e37137dfca37396d31",
    "svelte/legacy-export-let": "0223ca4f538116da46d27840653a11c352d88ad2f5eb8cc9a50a5b590001aad3",
    "svelte/legacy-$$props-and-$$restProps": "8d91d694b70547a915cc2360ea1c63e7b9dcd29fd0fedfc04b2fb3ade6c152a7",
    "svelte/legacy-on": "7dde3692ea5c91bbcf1d86ff91fce1966df0952d2cf153f3fab6fa1a55774330",
    "svelte/legacy-slots": "05d8524ab20b47d5f07e67f0634d425cf892715c68cf635b134d6b19e397bbb8",
    "svelte/legacy-$$slots": "d3aa2e8e480a9593259ad1d5dec43a605ed28bb92e7007d0713f60a398803d7c",
    "svelte/legacy-svelte-fragment": "aaa2a5b2fbb72fa2dfe5f10cdb2287863cf99d9590a634b43e28336da1a89e54",
    "svelte/legacy-svelte-component": "3c2d5fb89cfe5657950d279a4189ab1f877dac99e8afca187fc5952eecb39ae0",
    "svelte/legacy-svelte-self": "afc8f5667bd3643e206f1bd4298ee5e259ca0b5e8cf7b2fb7b9afd692b66ad78",
    "svelte/legacy-component-api": "9bd8fde41aa9e006091751b16d3de14b28471733534e08dfba99d745db78fac6"
  },
  "content": {}
}